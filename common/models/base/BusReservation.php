<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "bus_reservation".
 *
 * @property integer $id
 * @property string $name
 * @property integer $bus_info_id
 * @property integer $bus_way_id
 * @property integer $kontragent_persons_id
 * @property integer $number_seat
 * @property string $date
 * @property integer $status
 * @property integer $active
 *
 * @property \common\models\BusInfo $busInfo
 * @property \common\models\BusWay $busWay
 * @property \common\models\KontragentPersons $kontragentPersons
 * @property string $aliasModel
 */
abstract class BusReservation extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'bus_reservation';
    }

    /**
     * Alias name of table for crud viewsLists all Area models.
     * Change the alias name manual if needed later
     * @return string
     */
    public function getAliasModel($plural=false)
    {
        if($plural){
            return Yii::t('app', 'BusReservations');
        }else{
            return Yii::t('app', 'BusReservation');
        }
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['bus_info_id', 'bus_way_id', 'kontragent_persons_id'], 'required'],
            [['bus_info_id', 'bus_way_id', 'kontragent_persons_id', 'number_seat', 'status', 'active'], 'integer'],
            [['date'], 'safe'],
            [['name'], 'string', 'max' => 45],
            [['bus_info_id'], 'exist', 'skipOnError' => true, 'targetClass' => BusInfo::className(), 'targetAttribute' => ['bus_info_id' => 'id']],
            [['bus_way_id'], 'exist', 'skipOnError' => true, 'targetClass' => BusWay::className(), 'targetAttribute' => ['bus_way_id' => 'id']],
            [['kontragent_persons_id'], 'exist', 'skipOnError' => true, 'targetClass' => KontragentPersons::className(), 'targetAttribute' => ['kontragent_persons_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            
            'name' => Yii::t('app', 'Name'),
            'bus_info_id' => Yii::t('app', 'Bus Info ID'),
            'bus_way_id' => Yii::t('app', 'Bus Way ID'),
            'kontragent_persons_id' => Yii::t('app', 'Kontragent Persons ID'),
            'number_seat' => Yii::t('app', 'Number Seat'),
            'date' => Yii::t('app', 'Date'),
            'status' => Yii::t('app', 'Status'),
            'active' => Yii::t('app', 'Active'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(
            parent::attributeHints(),
            [

            'name' => Yii::t('app', 'Name'),
            'bus_info_id' => Yii::t('app', 'Bus Info Id'),
            'bus_way_id' => Yii::t('app', 'Bus Way Id'),
            'kontragent_persons_id' => Yii::t('app', 'Kontragent Persons Id'),
            'number_seat' => Yii::t('app', 'Номер места
'),
            'date' => Yii::t('app', 'Date'),
            'status' => Yii::t('app', 'Статус резервации'),
            'active' => Yii::t('app', 'Активна ли резервация 1 - активна, 0 - неактивна (отменена).'),
            ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBusInfo()
    {
        return $this->hasOne(\common\models\BusInfo::className(), ['id' => 'bus_info_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBusWay()
    {
        return $this->hasOne(\common\models\BusWay::className(), ['id' => 'bus_way_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getKontragentPersons()
    {
        return $this->hasOne(\common\models\KontragentPersons::className(), ['id' => 'kontragent_persons_id']);
    }




}
