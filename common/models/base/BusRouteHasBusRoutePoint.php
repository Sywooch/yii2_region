<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "bus_route_has_bus_route_point".
 *
 * @property integer $bus_route_id
 * @property integer $bus_route_point_id
 * @property integer $first_point
 * @property integer $end_point
 * @property integer $position
 * @property string $date_point_path
 * @property integer $time_pause
 * @property string $date_point_reverse
 * @property string $date_add
 * @property string $date_edit
 *
 * @property \common\models\BusRoute $busRoute
 * @property \common\models\BusRoutePoint $busRoutePoint
 * @property string $aliasModel
 */
abstract class BusRouteHasBusRoutePoint extends \yii\db\ActiveRecord
{


    const STATUS_ACTIVE = 1;
    const STATUS_DEACTIVE = 0;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'bus_route_has_bus_route_point';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'date_add',
                'updatedAtAttribute' => 'date_edit',
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['bus_route_id', 'bus_route_point_id'], 'required'],
            [['bus_route_id', 'bus_route_point_id', 'first_point', 'end_point', 'position', 'time_pause'], 'integer'],
            [['date_point_forward', 'date_point_reverse'], 'safe'],
            ['date_point_reverse', 'compare', 'compareAttribute'=>'date_point_forward', 'operator' => '>'],
            [['bus_route_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\BusRoute::className(), 'targetAttribute' => ['bus_route_id' => 'id']],
            [['bus_route_point_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\BusRoutePoint::className(), 'targetAttribute' => ['bus_route_point_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'bus_route_id' => Yii::t('app', 'Bus Route ID'),
            'bus_route_point_id' => Yii::t('app', 'Bus Route Point ID'),
            'first_point' => Yii::t('app', 'First Point'),
            'end_point' => Yii::t('app', 'End Point'),
            'position' => Yii::t('app', 'Position'),
            'date_point_forward' => Yii::t('app', 'Date Point Forward'),
            'time_pause' => Yii::t('app', 'Time Pause'),
            'date_point_reverse' => Yii::t('app', 'Date Point Reverse'),
            'date_add' => Yii::t('app', 'Date Add'),
            'date_edit' => Yii::t('app', 'Date Edit'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'bus_route_id' => Yii::t('app', 'Выберите маршрут'),
            'bus_route_point_id' => Yii::t('app', 'Выберите точку маршрута'),
            'first_point' => Yii::t('app', 'Данная точка на маршруте является отправной.'),
            'end_point' => Yii::t('app', 'Данная точка на маршруте является конечной.'),
            'position' => Yii::t('app', 'Порядок следования путевых точек.'),
            'date_point_forward' => Yii::t('app', 'Дата прибытия на маршрутную точку'),
            'time_pause' => Yii::t('app', 'Время стоянки на месте остановки на маршрутной точке'),
            'date_point_reverse' => Yii::t('app', 'Время прибытия на маршрутную точку по обратному пути'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBusRoute()
    {
        return $this->hasOne(\common\models\BusRoute::className(), ['id' => 'bus_route_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBusRoutePoint()
    {
        return $this->hasOne(\common\models\BusRoutePoint::className(), ['id' => 'bus_route_point_id']);
    }


    
    /**
     * @inheritdoc
     * @return BusRouteHasBusRoutePointQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\BusRouteHasBusRoutePointQuery(get_called_class());
    }


}
