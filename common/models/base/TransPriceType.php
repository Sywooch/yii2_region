<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use common\models\TransPriceTypeQuery;
use Yii;

/**
 * This is the base-model class for table "trans_price_type".
 *
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $date_add
 * @property string $date_edit
 * @property integer $active
 *
 * @property \common\models\TransPrice[] $transPrices
 * @property string $aliasModel
 */
abstract class TransPriceType extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'trans_price_type';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'description'], 'string'],
            [['date_add', 'date_edit'], 'safe'],
            [['active'], 'integer']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'name' => Yii::t('app', 'Name'),
            'description' => Yii::t('app', 'Description'),
            'date_add' => Yii::t('app', 'Date Add'),
            'date_edit' => Yii::t('app', 'Date Edit'),
            'active' => Yii::t('app', 'Active'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'name' => Yii::t('app', 'Name'),
            'description' => Yii::t('app', 'Description'),
            'date_add' => Yii::t('app', 'Date Add'),
            'date_edit' => Yii::t('app', 'Date Edit'),
            'active' => Yii::t('app', 'Active'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTransPrices()
    {
        return $this->hasMany(\common\models\TransPrice::className(), ['trans_price_type_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \app\models\TransPriceTypeQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new TransPriceTypeQuery(get_called_class());
    }


}
