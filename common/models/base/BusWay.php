<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "bus_way".
 *
 * @property integer $id
 * @property string $name
 * @property integer $bus_info_id
 * @property string $date_create
 * @property string $date_begin
 * @property string $date_end
 * @property integer $active
 * @property integer $ended
 * @property integer $bus_path_id
 * @property string $path_time
 *
 * @property \common\models\BusReservation[] $busReservations
 * @property \common\models\BusInfo $busInfo
 * @property \common\models\BusRoute $busPath
 * @property string $aliasModel
 */
abstract class BusWay extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'bus_way';
    }

    /**
     * Alias name of table for crud viewsLists all Area models.
     * Change the alias name manual if needed later
     * @return string
     */
    public function getAliasModel($plural=false)
    {
        if($plural){
            return Yii::t('app', 'BusWays');
        }else{
            return Yii::t('app', 'BusWay');
        }
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'bus_info_id', 'bus_path_id'], 'required'],
            [['name'], 'string'],
            [['bus_info_id', 'active', 'ended', 'bus_path_id'], 'integer'],
            [['date_create', 'date_begin', 'date_end'], 'safe'],
            [['path_time'], 'string', 'max' => 45],
            [['bus_info_id'], 'exist', 'skipOnError' => true, 'targetClass' => BusInfo::className(), 'targetAttribute' => ['bus_info_id' => 'id']],
            [['bus_path_id'], 'exist', 'skipOnError' => true, 'targetClass' => BusRoute::className(), 'targetAttribute' => ['bus_path_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Name'),
            'bus_info_id' => Yii::t('app', 'Bus Info ID'),
            'date_create' => Yii::t('app', 'Date Create'),
            'date_begin' => Yii::t('app', 'Date Begin'),
            'date_end' => Yii::t('app', 'Date End'),
            'active' => Yii::t('app', 'Active'),
            'ended' => Yii::t('app', 'Ended'),
            'bus_path_id' => Yii::t('app', 'Bus Path ID'),
            'path_time' => Yii::t('app', 'Path Time'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(
            parent::attributeHints(),
            [
            'id' => Yii::t('app', 'Первичный ключ. Данная таблица содержит информацию о всех маршрутах автобусов.'),
            'name' => Yii::t('app', 'Name'),
            'bus_info_id' => Yii::t('app', 'Bus Info Id'),
            'date_create' => Yii::t('app', 'Date Create'),
            'date_begin' => Yii::t('app', 'Date Begin'),
            'date_end' => Yii::t('app', 'Date End'),
            'active' => Yii::t('app', 'Поле указывает, опубликовано (активно) ли событие в данный момент.'),
            'ended' => Yii::t('app', 'Поле указывает на завершенное событие'),
            'bus_path_id' => Yii::t('app', 'Bus Path Id'),
            'path_time' => Yii::t('app', 'Время в пути'),
            ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBusReservations()
    {
        return $this->hasMany(\common\models\BusReservation::className(), ['bus_way_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBusInfo()
    {
        return $this->hasOne(\common\models\BusInfo::className(), ['id' => 'bus_info_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBusPath()
    {
        return $this->hasOne(\common\models\BusRoute::className(), ['id' => 'bus_path_id']);
    }




}
