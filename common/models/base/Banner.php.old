<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Imagine\Gd\Image;
use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "banner".
 *
 * @property integer $id
 * @property string $name
 * @property string $text
 * @property string $file
 * @property string $path
 * @property string $options
 * @property string $link
 * @property string $date_add
 * @property string $date_edit
 * @property integer $created_by
 * @property integer $updated_by
 * @property integer $lock
 * @property string $aliasModel
 */
abstract class Banner extends \yii\db\ActiveRecord
{
    use \mootensai\relation\RelationTrait;

    const IMAGE_PATH = '/uploads/images/banners';

    public $imageFiles;


    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'banner';
    }

    /**
     * @return array
     */
    public function behaviors()
    {
        return [
            'timestamp' => [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'date_add',
                'updatedAtAttribute' => 'date_edit',
                'value' => new \yii\db\Expression('NOW()'),
            ],
            'blameable' => [
                'class' => BlameableBehavior::className(),
                'createdByAttribute' => 'created_by',
                'updatedByAttribute' => 'updated_by',
            ],
        ];
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['path', 'options', 'link'], 'string'],
            [['imageFiles'], 'file', 'extensions' => 'png, jpg, gif', 'maxFiles' => 1],
            [['date_add', 'date_edit'], 'safe'],
            [['created_by', 'updated_by', 'lock'], 'integer'],
            [['name'], 'string', 'max' => 255],
            [['text'], 'string', 'max' => 100]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Name'),
            'text' => Yii::t('app', 'Text'),
            'file' => Yii::t('app', 'File'),
            'path' => Yii::t('app', 'Path'),
            'options' => Yii::t('app', 'Options'),
            'link' => Yii::t('app', 'Link'),
            'date_add' => Yii::t('app', 'Date Add'),
            'date_edit' => Yii::t('app', 'Date Edit'),
            'created_by' => Yii::t('app', 'Created By'),
            'updated_by' => Yii::t('app', 'Updated By'),
            'lock' => Yii::t('app', 'Lock'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'name' => Yii::t('app', 'Название баннера (заголовок)'),
            'text' => Yii::t('app', 'Подробный текст баннера'),
            'file' => Yii::t('app', 'Имя файла'),
            'path' => Yii::t('app', 'Путь до файла'),
            'options' => Yii::t('app', 'Опции (формат JSON)'),
            'link' => Yii::t('app', 'Ссылка на страницу при клике по баннеру'),
            'date_add' => Yii::t('app', 'Дата добавления записи'),
            'date_edit' => Yii::t('app', 'Дата изменения записи'),
            'created_by' => Yii::t('app', 'Кем создана запись (владелец записи)'),
            'updated_by' => Yii::t('app', 'Кем запись обновлена'),
        ]);
    }

    /**
     * @inheritdoc
     * @return BannerQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\BannerQuery(get_called_class());
    }

    private function resizeImage($gd_img){
        $image = getimagesize();
        //$image->
    }

}
